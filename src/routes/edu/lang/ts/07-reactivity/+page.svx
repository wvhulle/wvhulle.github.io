# Reactivity in TypeScript

On top of the [observer](../06-pub-sub/) pattern it is possible to build a reactive framework.

## Stores

- [Svelte](https://learn.svelte.dev/tutorial/welcome-to-svelte) has support for the observer pattern using the so-called **store contract**.

Work in progress.

## Signals

An implicit version of the store pattern is signals. Signals make use of getters to read and update state. Subscription happens inside effects. Effects track dependencies between signals at run-time.

For a simple implementation, see https://dev.to/ratiu5/implementing-signals-from-scratch-3e4c.

In order of appearance:

- Knockout: https://knockoutjs.com/documentation/observables.html
- Angular https://angular.io/guide/signals.
- SolidJS: https://www.solidjs.com/docs/latest/api#createsignal
- Leptos: a framework for WebAssembly in Rust https://github.com/leptos-rs/leptos
- The newest version of Svelte, 5, uses signals instead of stores. It switched from compile-time reactivity to run-time reactivity.
