# Monads in Rust

See:

- Advanced functional programming concepts often come from category theory. See [fantasy-land](https://github.com/fantasyland/fantasy-land).

FP patterns emphasize stateless computation and transformations. Monads wrap and handle values within a context (like error handling, state representation), providing mechanisms for chaining operations in a safe way.

A monad is like a container for a dirty computation with side effects. When using a monad, you declare what is

- core to the algorithm and has computational value
- you declare what happens when an operation fails

Strictly speaking, a monad is a type constructor which takes an underlying type and puts it into a specific computational context. For example, Maybe or Option types for dealing with optional values, List for non-deterministic computations, or IO for input/output operations.
